- name: Barman | Check DB user for exists
  raw: |
    sudo -u postgres /usr/bin/psql -c "\du" | grep -i {{ BARMAN_CLIENT_POSTGRESQL_USER }}
  register: result_grep_exist_user
  ignore_errors: yes

- name:  Barman client | WAL LEVEL
  lineinfile: 
    dest: "/etc/postgresql/{{BARMAN_CLIENT_POSTGRESQL_VERSION}}/main/postgresql.conf"
    regexp: "^#wal_level|^wal_level"
    insertbefore: "BOF"
    line: "wal_level = hot_standby"

- name:  Barman client | MAX_WAL_SENDERS
  lineinfile: 
    dest: "/etc/postgresql/{{BARMAN_CLIENT_POSTGRESQL_VERSION}}/main/postgresql.conf"
    regexp: "^#max_wal_senders|^max_wal_senders"
    insertbefore: "BOF"
    line: "max_wal_senders = {{ BARMAN_CLIENT_POSTGRESQL_MAX_WAL_SENDERS }}"

- name:  Barman client | LISTEN_ADDRESSES
  lineinfile: 
    dest: "/etc/postgresql/{{BARMAN_CLIENT_POSTGRESQL_VERSION}}/main/postgresql.conf"
    regexp: "^#listen_addresses|^listen_addresses"
    insertbefore: "BOF"
    line: "listen_addresses = '{{ BARMAN_CLINET_LISTEN_ADDRESSES}}'"

- name:  Barman client | max_replication_slots enable
  lineinfile:
    dest: "/etc/postgresql/{{BARMAN_CLIENT_POSTGRESQL_VERSION}}/main/postgresql.conf"
    regexp: "^#max_replication_slots|^max_replication_slots"
    insertbefore: "BOF"
    line: "max_replication_slots = {{BARMAN_CLIENT_POSTGRESQL_MAX_REPL_SLOTS}}"

- name: Barman client | Add comment to pg_hba
  lineinfile: 
    dest: "/etc/postgresql/{{BARMAN_CLIENT_POSTGRESQL_VERSION}}/main/pg_hba.conf"
    insertafter: "EOF"
    regexp: "# Allow replication connections from backup server"
    line: "# Allow replication connections from backup server"

- name: Barman client | Add authorization rule for replication for user
  lineinfile:
    dest: "/etc/postgresql/{{BARMAN_CLIENT_POSTGRESQL_VERSION}}/main/pg_hba.conf"
    insertafter: "EOF"
    line: "host replication {{BARMAN_CLIENT_POSTGRESQL_USER}} {{BARMAN_CLIENT_IP_OF_BACKUP_SERVER}}/32 md5"

- name: Barman client | Add authorization rule for connections for user
  lineinfile:
    dest: "/etc/postgresql/{{BARMAN_CLIENT_POSTGRESQL_VERSION}}/main/pg_hba.conf"
    insertafter: "EOF"
    line: "host all {{BARMAN_CLIENT_POSTGRESQL_USER}} {{BARMAN_CLIENT_IP_OF_BACKUP_SERVER}}/32 md5"
  register: changes_of_authenthication_file

- name:  Barman client | Create postgresql replication user and add grants
  become: yes
  raw: |
    sudo -u postgres /usr/bin/psql -c "CREATE USER {{ BARMAN_CLIENT_POSTGRESQL_USER }} WITH REPLICATION SUPERUSER;"
  register: result_create_user
  when: result_grep_exist_user.failed == true

- name:  Barman client | Set password for backup_user
  become: yes
  raw: |
    sudo -u postgres /usr/bin/psql -c "ALTER USER {{ BARMAN_CLIENT_POSTGRESQL_USER }} WITH PASSWORD '{{ BARMAN_CLIENT_POSTGRESQL_USER_PASSWORD }}';"
  when: result_grep_exist_user.failed == true      

- name: Barman client | Reload PostgreSQL
  systemd:
    state: reloaded
    name: postgresql
  when: changes_of_authenthication_file.changed == true

- name: Barman client | Get the package facts
  package_facts:
    manager: "auto"

- name: Barman client | Add Ferm rule for postgresql
  template:
   src: "templates/etc/ferm/filter-input.d/35_allow_postgresql_port_for_barman.conf.j2"
   dest: "/etc/ferm/filter-input.d/35_allow_postgresql_port_for_barman.conf"
   owner: "root"
   group: "root"
   mode: "0644"
  when: ansible_facts.packages.ferm is defined
  register: changes_of_ferm_rules
  
- name: Barman client | Reload Ferm
  systemd:
    state: reloaded
    name: ferm
  when: changes_of_ferm_rules.changed == true
  
- name: Barman client | Allow 5432 port for connections
  iptables:
    chain: INPUT
    source: '{{BARMAN_CLIENT_IP_OF_BACKUP_SERVER}}/32'
    jump: ACCEPT
    protocol: tcp
    destination_port: "{{BARMAN_CLIENT_PORT_FOR_CONNECTION}}"
    comment: /* allow postgresql for barman */
  when: ansible_facts.packages.ferm is not defined

